//
//

/*functions:
d2_portrait_icon              ACTION
d2_evasion_check              PATCH or ACTION
d2_subspell_remove_effects    PATCH
d2_remove_level_headers       PATCH
d2_subspell_remove_visuals    PATCH
d2_mc_import_fix              ACTION
d2_recast_at_interval         ACTION
*/

////////////////////////////////////////////////////////////

//Adds new portrait icon to statdesc.2da
//Will use existing icon with same name (if added by my mods)

/*Example usage:
LAF d2_portrait_icon INT_VAR name = RESOLVE_STR_REF (@99) STR_VAR bam = ~icon99~ RET icon END
*/

DEFINE_ACTION_FUNCTION d2_portrait_icon

    INT_VAR name = 0     // string ref for display name
    STR_VAR bam  = ~~    // resource name of BAM icon
	    RET icon         // number for icon effects (display/remove/prevent)

BEGIN

  COPY_EXISTING ~STATDESC.2DA~ ~override~

//Set some variables
    GET_STRREF name iconname
    READ_2DA_ENTRIES_NOW ~statdesc_table~ 1
    COUNT_2DA_ROWS 1 rows
    SET row_count = (rows - 1)    // count starts at 0
    SET icon = ~-1~

//uses existing icon if already added (from my mods)
    FOR (r = 3; r < rows; ++r) BEGIN
      READ_2DA_ENTRY_FORMER ~statdesc_table~ r 1 stringref
      GET_STRREF stringref string
      PATCH_IF (~%string%~ STRING_EQUAL_CASE ~%iconname%~) BEGIN    // if icon name is already used
        READ_2DA_ENTRY_FORMER ~statdesc_table~ r 2 resource
        PATCH_IF !(~%resource%~ STRING_MATCHES_REGEXP ~^d2.*~) BEGIN    // if resource DOES start with "d2"
          READ_2DA_ENTRY_FORMER ~statdesc_table~ r 0 icon
          SET icon = icon    // RET variable
        END
      END
    END

//Otherwise, create new icon
    PATCH_IF (icon = ~-1~) BEGIN
      READ_2DA_ENTRY_FORMER ~statdesc_table~ row_count 0 icon    // get last icon number, then add +1
      SET icon += 1    // RET variable
      INSERT_2DA_ROW rows 1 ~%icon% %name% %bam%~    // add new line with variables
      PRETTY_PRINT_2DA
    END
  BUT_ONLY

END

////////////////////////////////////////////////////////////

//Adds Evasion check to spells (mainly for IWDEE)
//Can be added for BGEE games, but this stat isn't used without mods
//Note: doesn't add saving throws to effect (add that manually if needed)

DEFINE_PATCH_FUNCTION d2_evasion_check

  INT_VAR insert = 0      // insert point (0 = top)
          opcode = 324    // use 324 or 318 (other numbers default to 318)

BEGIN

    PATCH_IF ((opcode != 324) AND (opcode != 318)) BEGIN
      SET opcode = 318
    END

    READ_LONG 0x34 spllevel    // use for "power" field in spell effect

    LPF ADD_SPELL_EFFECT
      INT_VAR
        opcode        = %opcode%
        target        = 2
        power         = %spllevel%
        parameter2    = 63    // Evasion check
        resist_dispel = 2
        insert_point  = %insert%
      STR_VAR
        resource      = ~%SOURCE_RES%~    // evasion is against current spell
    END

END

////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION d2_evasion_check

  INT_VAR insert = 0      // insert point (0 = top)
          opcode = 324    // use 324 or 318 (other numbers default to 318)
  STR_VAR spell  = ~~     // resource of spl file

BEGIN

ACTION_IF (FILE_EXISTS_IN_GAME ~%spell%.SPL~) BEGIN
  COPY_EXISTING ~%spell%.SPL~ ~override~
    PATCH_IF ((opcode != 324) AND (opcode != 318)) BEGIN
      SET opcode = 318
    END

    READ_LONG 0x34 spllevel    // use for "power" field in spell effect

    LPF ADD_SPELL_EFFECT
      INT_VAR
        opcode        = %opcode%
        target        = 2
        power         = %spllevel%
        parameter2    = 63    // Evasion check
        resist_dispel = 2
        insert_point  = %insert%
      STR_VAR
        resource      = ~%SOURCE_RES%~    // evasion is against current spell
    END
  BUT_ONLY
END

END

////////////////////////////////////////////////////////////

//Removes casting effects
//Removes projectile

DEFINE_PATCH_FUNCTION d2_subspell_remove_effects

BEGIN

  WRITE_LONG  0x8 ~-1~
  WRITE_ASCII 0x10 ~None~ #8
  WRITE_SHORT 0x1c 0
  WRITE_SHORT 0x22 0
  WRITE_BYTE  0x25 0
  WRITE_BYTE  0x27 0
  WRITE_LONG  0x34 1
  LPF ALTER_SPELL_HEADER INT_VAR target=1 speed=0 projectile=1 END

END

////////////////////////////////////////////////////////////

//Removes spell headers except the top one
//header is set to 1 (called "melee", but also used for spells)

DEFINE_PATCH_FUNCTION d2_remove_level_headers

BEGIN

  LPF ALTER_SPELL_HEADER INT_VAR header=1 new_header_type=0 END
  LPF DELETE_SPELL_HEADER INT_VAR header_type=1 END
  LPF DELETE_SPELL_HEADER INT_VAR header_type=2 END
  LPF ALTER_SPELL_HEADER INT_VAR new_header_type=1 END

END

////////////////////////////////////////////////////////////

//Removes visual and audio effects
//Removes portrait icon and dialogue strings

DEFINE_PATCH_FUNCTION d2_subspell_remove_visuals

  INT_VAR visual   = 1    // 1 = remove, 0 = not remove
          sound    = 1
          icon     = 1
          string   = 1

BEGIN

  PATCH_IF (visual > 0) BEGIN
    LPF DELETE_EFFECT INT_VAR match_opcode=8 END
    LPF DELETE_EFFECT INT_VAR match_opcode=9 END
    LPF DELETE_EFFECT INT_VAR match_opcode=50 END
    LPF DELETE_EFFECT INT_VAR match_opcode=61 END
    LPF DELETE_EFFECT INT_VAR match_opcode=141 END
    LPF DELETE_EFFECT INT_VAR match_opcode=215 END
  END

  PATCH_IF (sound > 0) BEGIN
    LPF DELETE_EFFECT INT_VAR match_opcode=174 END
  END

  PATCH_IF (icon > 0) BEGIN
    LPF DELETE_EFFECT INT_VAR match_opcode=142 END
  END

  PATCH_IF (string > 0) BEGIN
    LPF DELETE_EFFECT INT_VAR match_opcode=139 END
  END

END

////////////////////////////////////////////////////////////

//Fix for multiclass kits losing abilities when imported (affects Charname in BG2/ToB/SoD)
//Adds an effect that removes, then re-adds ability in correct amount (based on %amount% variable)
//Recast every x seconds (default is once per day)
//Automatically overwrites effects that give the same ability.

DEFINE_ACTION_FUNCTION d2_mc_import_fix

  INT_VAR  amount     = 1            // number of times to give the ability
           interval   = 7200         // reapply every x seconds (7200 = 24 hours)
  STR_VAR  spell      = ~~           // ability filename (7 characters or less)
           new_spell  = ~d2spell~    // shell spell (7 characters or less)
  RET      new_spell

BEGIN

  ACTION_IF (FILE_EXISTS_IN_GAME ~%spell%.SPL~) BEGIN


ACTION_IF !(FILE_EXISTS ~override/d2_mc_import_fix~) BEGIN
<<<<<<<< .../temp/d2_mc_import_fix
>>>>>>>>
COPY ~.../temp/d2_mc_import_fix~  ~override~
END


  ACTION_IF !(FILE_CONTAINS ~override/d2_mc_import_fix~ ~%new_spell%~) BEGIN    // check list of shell spells

    // base spell
    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%.SPL~
      // use EFF once per round
      LPF ALTER_EFFECT INT_VAR multi_match=1 opcode=272 parameter1=6 parameter2=3 STR_VAR resource=~%new_spell%a~ END
      // overwrite when recast
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=326 parameter2=0 STR_VAR resource=~%spell%!~ END


    // subspell
    COPY_EXISTING ~archhit.EFF~  ~override/%new_spell%a.EFF~
      WRITE_LONG   0x10 146
      WRITE_LONG   0x14 1
      WRITE_LONG   0x1c 0
      WRITE_LONG   0x20 1
      WRITE_LONG   0x24 1
      WRITE_LONG   0x28 0
      WRITE_LONG   0x60 0
      WRITE_ASCII  0x30 ~%new_spell%a~ #8

    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%a.SPL~
      // add ability
      LPF ALTER_EFFECT INT_VAR opcode=171 parameter1=0 STR_VAR resource=~%spell%~ END
      PATCH_IF (amount > 1) BEGIN
        FOR (n = 2; n <= amount; ++n) BEGIN
          LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR match_resource=~%spell%~ END
        END
      END
      // remove ability
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=172 STR_VAR match_resource=~%spell%~ END
      // immune for x seconds
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=318 timing=0 duration=interval STR_VAR resource=~%new_spell%a~ insert=last END


    // subspell to overwrite base spell
    ACTION_IF !(FILE_EXISTS ~override/%spell%!.SPL~) BEGIN
      COPY_EXISTING ~SPCL142.SPL~  ~override/%spell%!.SPL~
        LPF ALTER_EFFECT INT_VAR opcode=321 parameter1=0 parameter2=0 STR_VAR resource=~%new_spell%~ END
    END
    ELSE BEGIN
      COPY_EXISTING ~%spell%!.SPL~  ~override~
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%~ END
      BUT_ONLY
    END


    //add to list of shell spells (use to skip making the same spell twice)
    APPEND ~d2_mc_import_fix~  ~%new_spell%~


  END
  END

END

////////////////////////////////////////////////////////////

//Variation of above, used to apply effect directly (instead of giving abilities)
//Recast every x seconds (default is once per day)
//Automatically overwrites effects that apply the same spell.

DEFINE_ACTION_FUNCTION d2_recast_at_interval

  INT_VAR  interval   = 7200         // reapply every x seconds (7200 = 24 hours)
  STR_VAR  spell      = ~~           // ability filename (7 characters or less)
           new_spell  = ~d2spell~    // shell spell (7 characters or less)
  RET      new_spell

BEGIN

  ACTION_IF (FILE_EXISTS_IN_GAME ~%spell%.SPL~) BEGIN


ACTION_IF !(FILE_EXISTS ~override/d2_recast_at_interval~) BEGIN
<<<<<<<< .../temp/d2_recast_at_interval
>>>>>>>>
COPY ~.../temp/d2_recast_at_interval~  ~override~
END


  ACTION_IF !(FILE_CONTAINS ~override/d2_recast_at_interval~ ~%new_spell%~) BEGIN    // check list of shell spells

    // base spell
    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%.SPL~
      // use EFF once per round
      LPF ALTER_EFFECT INT_VAR multi_match=1 opcode=272 parameter1=6 parameter2=3 STR_VAR resource=~%new_spell%a~ END
      // overwrite when recast
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=326 parameter2=0 STR_VAR resource=~%spell%!~ END


    // subspell
    COPY_EXISTING ~archhit.EFF~  ~override/%new_spell%a.EFF~
      WRITE_LONG   0x10 146
      WRITE_LONG   0x14 1
      WRITE_LONG   0x1c 0
      WRITE_LONG   0x20 1
      WRITE_LONG   0x24 1
      WRITE_LONG   0x28 0
      WRITE_LONG   0x60 0
      WRITE_ASCII  0x30 ~%new_spell%a~ #8

    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%a.SPL~
      // add ability
      LPF ALTER_EFFECT INT_VAR opcode=326 parameter1=0 parameter2=0 STR_VAR resource=~%spell%~ END
      // immune for x seconds
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=318 timing=0 duration=interval STR_VAR resource=~%new_spell%a~ insert=last END


    // subspell to overwrite base spell
    ACTION_IF !(FILE_EXISTS ~override/%spell%!.SPL~) BEGIN
      COPY_EXISTING ~SPCL142.SPL~  ~override/%spell%!.SPL~
        LPF ALTER_EFFECT INT_VAR opcode=321 parameter1=0 parameter2=0 STR_VAR resource=~%new_spell%~ END
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%a~ END
    END
    ELSE BEGIN
      COPY_EXISTING ~%spell%!.SPL~  ~override~
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%~ END
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%a~ END
      BUT_ONLY
    END


    //add to list of shell spells (use to skip making the same spell twice)
    APPEND ~d2_recast_at_interval~  ~%new_spell%~


  END
  END

END

////////////////////////////////////////////////////////////