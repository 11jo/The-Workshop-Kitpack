//EE-only
//requires AUTO_EVAL_STRINGS


/*functions:
d2_mc_import_fix              ACTION
d2_recast_at_interval         ACTION
*/

////////////////////////////////////////////////////////////

//Fix for multiclass kits losing abilities when imported (affects Charname in BG2/ToB/SoD)
//Adds an effect that removes, then re-adds ability in correct amount (based on %amount% variable)
//Recast every x seconds (default is once per day)
//Automatically overwrites effects that give the same ability.

DEFINE_ACTION_FUNCTION d2_mc_import_fix

  INT_VAR  amount     = 1            // number of times to give the ability
           interval   = 7200         // reapply every x seconds (7200 = 24 hours)
  STR_VAR  spell      = ~~           // ability filename (7 characters or less)
           new_spell  = ~d2spell~    // shell spell (7 characters or less)
  RET      new_spell

BEGIN

  ACTION_IF (FILE_EXISTS_IN_GAME ~%spell%.SPL~) BEGIN


ACTION_IF !(FILE_EXISTS ~override/d2_mc_import_fix~) BEGIN
<<<<<<<< .../temp/d2_mc_import_fix
>>>>>>>>
COPY ~.../temp/d2_mc_import_fix~  ~override~
END


  ACTION_IF !(FILE_CONTAINS ~override/d2_mc_import_fix~ ~%new_spell%~) BEGIN    // check list of shell spells

    // base spell
    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%.SPL~
      // use EFF once per round
      LPF ALTER_EFFECT INT_VAR multi_match=1 opcode=272 parameter1=6 parameter2=3 STR_VAR resource=~%new_spell%a~ END
      // overwrite when recast
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=326 parameter2=0 STR_VAR resource=~%spell%!~ END


    // subspell
    COPY_EXISTING ~UNDEDDAM.EFF~  ~override/%new_spell%a.EFF~
      WRITE_LONG   0x10 326    // apply effects
      WRITE_LONG   0x14 2
      WRITE_LONG   0x1c 0      // parameter1
      WRITE_LONG   0x20 0      // parameter2
      WRITE_LONG   0x24 1
      WRITE_SHORT  0x2c 100
      WRITE_ASCII  0x30 ~%new_spell%a~ #8

    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%a.SPL~
      // add ability
      LPF ALTER_EFFECT INT_VAR opcode=171 parameter1=0 STR_VAR resource=~%spell%~ END
      PATCH_IF (amount > 1) BEGIN
        FOR (n = 2; n <= amount; ++n) BEGIN
          LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR match_resource=~%spell%~ END
        END
      END
      // remove ability
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=172 STR_VAR match_resource=~%spell%~ END
      // immune for x seconds
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=318 timing=0 duration=interval STR_VAR resource=~%new_spell%a~ insert=last END


    // subspell to overwrite base spell
    ACTION_IF !(FILE_EXISTS ~override/%spell%!.SPL~) BEGIN
      COPY_EXISTING ~SPCL142.SPL~  ~override/%spell%!.SPL~
        LPF ALTER_EFFECT INT_VAR opcode=321 parameter1=0 parameter2=0 STR_VAR resource=~%new_spell%~ END
    END
    ELSE BEGIN
      COPY_EXISTING ~%spell%!.SPL~  ~override~
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%~ END
      BUT_ONLY
    END


    //add to list of shell spells (use to skip making the same spell twice)
    APPEND ~d2_mc_import_fix~  ~%new_spell%~


  END
  END

END

////////////////////////////////////////////////////////////

//Variation of above, used to apply effect directly (instead of giving abilities)
//Recast every x seconds (default is once per day)
//Automatically overwrites effects that apply the same spell.

DEFINE_ACTION_FUNCTION d2_recast_at_interval

  INT_VAR  interval   = 7200         // reapply every x seconds (7200 = 24 hours)
  STR_VAR  spell      = ~~           // ability filename (7 characters or less)
           new_spell  = ~d2spell~    // shell spell (7 characters or less)
  RET      new_spell

BEGIN

  ACTION_IF (FILE_EXISTS_IN_GAME ~%spell%.SPL~) BEGIN


ACTION_IF !(FILE_EXISTS ~override/d2_recast_at_interval~) BEGIN
<<<<<<<< .../temp/d2_recast_at_interval
>>>>>>>>
COPY ~.../temp/d2_recast_at_interval~  ~override~
END


  ACTION_IF !(FILE_CONTAINS ~override/d2_recast_at_interval~ ~%new_spell%~) BEGIN    // check list of shell spells

    // base spell
    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%.SPL~
      // use EFF once per round
      LPF ALTER_EFFECT INT_VAR multi_match=1 opcode=272 parameter1=6 parameter2=3 STR_VAR resource=~%new_spell%a~ END
      // overwrite when recast
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=326 parameter2=0 STR_VAR resource=~%spell%!~ END


    // subspell
    COPY_EXISTING ~UNDEDDAM.EFF~  ~override/%new_spell%a.EFF~
      WRITE_LONG   0x10 326    // apply effects
      WRITE_LONG   0x14 2
      WRITE_LONG   0x1c 0      // parameter1
      WRITE_LONG   0x20 0      // parameter2
      WRITE_LONG   0x24 1
      WRITE_SHORT  0x2c 100
      WRITE_ASCII  0x30 ~%new_spell%a~ #8

    COPY_EXISTING ~SPCL142.SPL~  ~override/%new_spell%a.SPL~
      // add ability
      LPF ALTER_EFFECT INT_VAR opcode=326 parameter1=0 parameter2=0 STR_VAR resource=~%spell%~ END
      // immune for x seconds
      LPF CLONE_EFFECT INT_VAR multi_match=1 opcode=318 timing=0 duration=interval STR_VAR resource=~%new_spell%a~ insert=last END


    // subspell to overwrite base spell
    ACTION_IF !(FILE_EXISTS ~override/%spell%!.SPL~) BEGIN
      COPY_EXISTING ~SPCL142.SPL~  ~override/%spell%!.SPL~
        LPF ALTER_EFFECT INT_VAR opcode=321 parameter1=0 parameter2=0 STR_VAR resource=~%new_spell%~ END
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%a~ END
    END
    ELSE BEGIN
      COPY_EXISTING ~%spell%!.SPL~  ~override~
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%~ END
        LPF CLONE_EFFECT INT_VAR multi_match=1 STR_VAR resource=~%new_spell%a~ END
      BUT_ONLY
    END


    //add to list of shell spells (use to skip making the same spell twice)
    APPEND ~d2_recast_at_interval~  ~%new_spell%~


  END
  END

END

////////////////////////////////////////////////////////////