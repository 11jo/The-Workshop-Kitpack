/*
for single-class Clerics or Druids (no specialization)
Make custom "weapontype" array, then INCLUDE this file
Sets both proficiencies and weapon restrictions (DoF and FnP).
*/


ACTION_IF ((FILE_EXISTS_IN_GAME ~RASPHERE.marker~) OR
           (FILE_EXISTS_IN_GAME ~d5__fnp_usability.d5~) OR
           (MOD_IS_INSTALLED ~Faiths_and_Powers.tp2~ (ID_OF_LABEL ~Faiths_and_Powers.tp2~ ~D5_FNP_WEAPON_USABILITY~))
) BEGIN


/*
ACTION_DEFINE_ASSOCIATIVE_ARRAY weapontype BEGIN    // weapon => usable
  15 => 1    // bows
  16 => 1    // daggers
  17 => 1    // maces, clubs
  18 => 1    // slings
  19 => 1    // small swords (short sword, wakizashi)
  20 => 1    // large swords (long sword, bastard sword, two handed sword, ninjato)
  21 => 1    // hammers
  22 => 1    // morning stars
  23 => 1    // flails
  24 => 1    // darts
  25 => 1    // axes
  26 => 1    // quarterstaff
  27 => 1    // crossbows
  28 => 1    // fist
  29 => 1    // spears
  30 => 1    // halberds
END
*/


//Weapon restrictions (DoF)
ACTION_IF (!(FILE_EXISTS_IN_GAME ~d5__fnp_usability.d5~) AND
           !(MOD_IS_INSTALLED ~Faiths_and_Powers.tp2~ (ID_OF_LABEL ~Faiths_and_Powers.tp2~ ~D5_FNP_WEAPON_USABILITY~))
) BEGIN

COPY_EXISTING_REGEXP GLOB ~.*\.ITM~  ~override~
  PATCH_IF (!(~%SOURCE_RES%~ STRING_EQUAL_CASE ~secret01~) AND    // skip these items
            !(~%SOURCE_RES%~ STRING_EQUAL_CASE ~d2tec01~) AND
            !(~%SOURCE_RES%~ STRING_EQUAL_CASE ~d2tec01b~)
  ) BEGIN

    LPF d2_restrict_item_flags RET droppable displayable restrictions END
    PATCH_IF ((%droppable%) AND (%displayable%)) BEGIN
      PATCH_IF (restrictions != 0) BEGIN    // skip anything with no race/class/alignment restrictions

        READ_SHORT 0x1c itemtype
        PHP_EACH weapontype AS type => usable BEGIN    // set weapon to %type% and usable to %usable%
          PATCH_IF (type = itemtype) BEGIN
            PATCH_IF (usable < 1) BEGIN
              LPF ADD_ITEM_EQEFFECT
                INT_VAR
                  opcode = 319
                  target = 1
                  parameter1 = IDS_OF_SYMBOL (kit ~D2%kitname%~)
                  parameter2 = 9
                  timing = 2
              END
            END
          END
        END

      END
    END
  END
BUT_ONLY

END



//Weapon restrictions (FnP)
ACTION_DEFINE_ASSOCIATIVE_ARRAY fnpweapontype BEGIN    // fnptype => weapon
  15 => 15    // bows
  16 => 16    // daggers
  17 => 17    // maces
  18 => 18    // slings
  19 => 19    // short sword
  20 => 20    // long sword
  21 => 21    // hammers
  22 => 20    // bastard sword
  23 => 23    // flails, morning star
  24 => 24    // darts
  25 => 25    // axes
  26 => 26    // quarterstaff, clubs
  27 => 27    // crossbows
  28 => 28    // fist
  29 => 20    // scimitar, wakizashi, ninjato
  30 => 20    // katana
  44 => 29    // spear
  57 => 20    // greatsword
  69 => 30    // halberd
END

ACTION_IF ((FILE_EXISTS_IN_GAME ~d5__fnp_usability.d5~) OR
           (MOD_IS_INSTALLED ~Faiths_and_Powers.tp2~ (ID_OF_LABEL ~Faiths_and_Powers.tp2~ ~D5_FNP_WEAPON_USABILITY~))
) BEGIN

COPY_EXISTING_REGEXP GLOB ~.*\.ITM~  ~override~
  PATCH_IF (!(~%SOURCE_RES%~ STRING_EQUAL_CASE ~secret01~) AND    // skip these items
            !(~%SOURCE_RES%~ STRING_EQUAL_CASE ~d2tec01~) AND
            !(~%SOURCE_RES%~ STRING_EQUAL_CASE ~d2tec01b~)
  ) BEGIN

    LPF d2_restrict_item_flags RET droppable displayable restrictions END
    PATCH_IF ((%droppable%) AND (%displayable%)) BEGIN
      PATCH_IF (restrictions != 0) BEGIN    // skip anything with no race/class/alignment restrictions

        READ_SHORT 0x1c itemtype
        PHP_EACH fnpweapontype AS fnptype => weapon BEGIN    // set fnptype to %fnptype% and weapon to %weapon%
          PATCH_IF (fnptype = itemtype) BEGIN
            PHP_EACH weapontype AS type => usable BEGIN      // set weapon to %type% and usable to %usable%
              PATCH_IF (weapon = type) BEGIN
                PATCH_IF (usable < 1) BEGIN
                  LPF ADD_ITEM_EQEFFECT
                    INT_VAR
                      opcode = 319
                      target = 1
                      parameter1 = IDS_OF_SYMBOL (kit ~D2%kitname%~)
                      parameter2 = 9
                      timing = 2
                  END
                END
              END
            END
          END
        END

      END
    END
  END
BUT_ONLY

END



//Weapon proficiencies (unmodded profs)
COPY_EXISTING ~weapprof.2DA~  override
  LPF weapprof_set_types INT_VAR entry=0 STR_VAR kit=~D2%kitname%~ RET col_number END

  PHP_EACH weapontype AS type => usable BEGIN    // set weapon to %type% and usable to %usable%
    PATCH_IF (usable > 0) BEGIN
      PATCH_IF (type = 15) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 5 col_number 1     // bg1 bows
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 27 col_number 1    // longbow
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 28 col_number 1    // shortbow
      END
      PATCH_IF (type = 16) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 18 col_number 1    // dagger
      END
      PATCH_IF (type = 17) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 7 col_number 1     // bg1 blunt
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 24 col_number 1    // mace
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 20 col_number 1    // club
      END
      PATCH_IF (type = 18) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 30 col_number 1    // sling
      END
      PATCH_IF (type = 19) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 4 col_number 1     // bg1 small swords
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 13 col_number 1    // short sword
      END
      PATCH_IF (type = 20) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 3 col_number 1     // bg1 large swords
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 11 col_number 1    // bastard sword
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 12 col_number 1    // long sword
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 15 col_number 1    // 2 handed sword
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 16 col_number 1    // katana
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 17 col_number 1    // scimitar
      END
      PATCH_IF (type = 21) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 19 col_number 1    // warhammer
      END
      PATCH_IF (type = 23) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 8 col_number 1     // bg1 spiked
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 23 col_number 1    // flail
      END
      PATCH_IF (type = 24) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 10 col_number 1    // bg1 missile
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 29 col_number 1    // dart
      END
      PATCH_IF (type = 25) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 9 col_number 1     // bg1 axe
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 14 col_number 1    // axe
      END
      PATCH_IF (type = 26) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 25 col_number 1    // staff
      END
      PATCH_IF (type = 27) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 26 col_number 1    // crossbow
      END
      PATCH_IF (type = 29) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 6 col_number 1     // bg1 spears
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 21 col_number 1    // spear
      END
      PATCH_IF (type = 30) BEGIN
        SET_2DA_ENTRY_LATER ~dofweapons_edits~ 22 col_number 1    // halberd
      END
    END
  END

  SET_2DA_ENTRIES_NOW ~dofweapons_edits~ 1
  PRETTY_PRINT_2DA

BUT_ONLY

END


/*
*/